# 数的范围_二分查找模板
```
#include <iostream>
using namespace std;

int left_bound(int nums[], int sz, int num){
    int l = 0, r = sz-1;
    while (l <= r){
        int mid = l + (r-l)/2;
        if (nums[mid] < num)
            l = mid+1;
        else if (nums[mid] > num)
            r = mid-1;
        else if (nums[mid] == num)
            r = mid-1;
    }
    // 因为要判断下标l，所以要先检查l是否合法
    //而l是往右走的，所以只需要判断是否超出右边界
    if (l >= sz || nums[l] != num)
        return -1;
    if (nums[l] == num)
        return l;

}

int right_bound(int nums[], int sz, int num){
    int l = 0, r = sz-1;
    while (l <= r){
        int mid = l + (r-l)/2;
        if (nums[mid] < num)
            l = mid+1;
        else if (nums[mid] > num)
            r = mid-1;
        else if (nums[mid] == num)
            l = mid+1;
    }
    if (r < 0 || nums[r] != num)
        return -1;
    if (nums[r] == num)
        return r;
}

int main()
{
    int n, m;
    scanf("%d %d", &n, &m);

    int nums[100005];
    for (int i = 0; i < n; ++i)
        scanf("%d", &nums[i]);

    for (int i = 0; i < m; ++i) {
        int num;
        scanf("%d", &num);
        int l = left_bound(nums, n, num);
        int r = right_bound(nums, n, num);
        printf("%d %d\n", l, r);
    }

    return 0;
}
```
