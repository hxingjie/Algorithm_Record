# JZ35 复杂链表的复制
```c++
class Solution {
public:
    RandomListNode* Clone(RandomListNode* pHead) {
        RandomListNode* head_n = new RandomListNode(-1);

        RandomListNode* p = pHead;
        RandomListNode* p_n = head_n;

        // 次序是唯一的，值不一定是唯一的
        unordered_map<RandomListNode*, int> p2idx;
        unordered_map<int, RandomListNode*> idx2p;
        int idx = 0;
        while (p != nullptr) {
            RandomListNode* node = new RandomListNode(p->label);
            p_n->next = node;
            p_n = p_n->next;

            idx += 1;
            p2idx[p] = idx;
            idx2p[idx] = p_n;

            p = p->next;
        }

        p = pHead;
        p_n = head_n->next;
        while (p != nullptr) {
            idx = p2idx[p->random];
            p_n->random = idx2p[idx];

            p_n = p_n->next;
            p = p->next;
        }
        return head_n->next;
    }
};
```
