# JZ36 二叉搜索树与双向链表
```c++
class Solution {
public:
    TreeNode* Convert(TreeNode* pRootOfTree) {
		if (pRootOfTree == nullptr) {
			return nullptr;
		}

        TreeNode* left = Convert(pRootOfTree->left);
		TreeNode* right = Convert(pRootOfTree->right);
		TreeNode* p = left;
		if (p != nullptr) {
			while (p->right != nullptr) { // p->right, p != nullptr
				p = p->right;
			}
			p->right = pRootOfTree;
			pRootOfTree->left = p;
		} else {
			pRootOfTree->left = nullptr;
		}
		
		if (right != nullptr) {
			pRootOfTree->right = right;
			right->left = pRootOfTree;
		} else {
			pRootOfTree->right = nullptr;
		}
		
		return left != nullptr ? left : pRootOfTree;
    }
};

```
