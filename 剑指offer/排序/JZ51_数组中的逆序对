# JZ51 数组中的逆序对
```c++
#include <vector>
class Solution {
public:
    int ans = 0;
    vector<int> tmp;
    void merge(vector<int>& nums, int lo, int mid, int hi) {
        for (int i = lo; i <= hi; i++) // 复制到辅助数组中
            tmp[i] = nums[i];

        // lo mid mid+1 hi
        int p1 = lo, p2 = mid+1;
        int idx = lo;
        while (p1 <= mid && p2 <= hi) {
            if (tmp[p1] < tmp[p2]){
                nums[idx] = tmp[p1];
                ans = (ans+p2-mid-1)%1000000007;
                p1 += 1;
            } else if (tmp[p1] >= tmp[p2]){
                nums[idx] = tmp[p2];
                p2 += 1;
            }
            idx += 1;
        }
        while (p1 <= mid) {
            nums[idx] = tmp[p1];
            ans = (ans+p2-mid-1)%1000000007;
            p1 += 1;
            idx += 1;
        }
        while (p2 <= hi){
            nums[idx] = tmp[p2];
            p2 += 1;
            idx += 1;
        }
    }
    void mysort(vector<int>& nums, int lo, int hi) {
        if (lo == hi)
            return;
        int mid = lo + (hi-lo)/2;
        mysort(nums, lo, mid);
        mysort(nums, mid+1, hi);
        merge(nums, lo, mid, hi);
    }
    int InversePairs(vector<int>& nums) {
        tmp = vector<int>(nums.size());
        mysort(nums, 0, nums.size()-1);
        return ans;
    }
};
```
