# JZ53 数字在升序数组中出现的次数
```c++
class Solution {
public:
    int findLeftBound(vector<int>& nums, int k) {
        int l = 0, r = nums.size()-1;
        while (l <= r) {
            int mid = l + (r-l)/2;
            if (nums[mid] == k)
                r = mid-1;
            else if (nums[mid] > k)
                r = mid-1;
            else if (nums[mid] < k)
                l = mid+1;
        }
        if (l < nums.size() && nums[l] == k)
            return l;
        else
            return -1;
    }
    int findRightBound(vector<int>& nums, int k) {
        int l = 0, r = nums.size()-1;
        while (l <= r) {
            int mid = l + (r-l)/2;
            if (nums[mid] == k)
                l = mid+1;
            else if (nums[mid] > k)
                r = mid-1;
            else if (nums[mid] < k)
                l = mid+1;
        }
        if (r >= 0 && nums[r] == k)
            return r;
        else
            return -1;
    }
    int GetNumberOfK(vector<int>& nums, int k) {
        int l = findLeftBound(nums, k);
        int r = findRightBound(nums, k);
        return l == -1 ? 0 : r-l+1;
    }
};
```
