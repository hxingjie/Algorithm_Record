# JZ29 顺时针打印矩阵
```c++
class Solution {
public:
    vector<int> printMatrix(vector<vector<int>> matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int cnt = 0;
        vector<int> ans(n*m);

        int bound_up = 0, bound_down = n-1;
        int bound_left = 0, bound_right = m-1;

        int row = 0, col = 0;
        while (true) {
            while (col <= bound_right) {
                ans[cnt] = matrix[row][col];
                cnt += 1;
                col += 1;
            }
            row += 1;
            col -= 1;
            bound_up += 1;
            if (cnt == n*m) break;

            while (row <= bound_down) {
                ans[cnt] = matrix[row][col];
                cnt += 1;
                row += 1;
            }
            row -= 1;
            col -= 1;
            bound_right -= 1;
            if (cnt == n*m) break;

            while (col >= bound_left) {
                ans[cnt] = matrix[row][col];
                cnt += 1;
                col -= 1;
            }
            row -= 1;
            col += 1;
            bound_down -= 1;
            if (cnt == n*m) break;

            while (row >= bound_up) {
                ans[cnt] = matrix[row][col];
                cnt += 1;
                row -= 1;
            }
            row += 1;
            col += 1;
            bound_left += 1;
            if (cnt == n*m) break;
        }
        return ans;
    }
};
```
